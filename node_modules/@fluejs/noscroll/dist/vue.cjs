'use strict';

const index = require('./index.cjs');
const vue = require('vue');
require('./shared/noscroll.051b1d91.cjs');

const vAdjustScrollbarWidth = {
  mounted(el) {
    index.adjustScrollbarWidth(el);
  },
  beforeUnmount(el) {
    index.removeScrollbarWidthAdjustment(el);
  }
};
const vMarkScrollable = {
  mounted(el) {
    index.markScrollable(el);
  },
  beforeUnmount(el) {
    index.unmarkScrollable(el);
  }
};
const usePageScrollToggle = (isDisabled, {
  immediate = true,
  toggler = index.createPageScrollToggler
} = {}) => {
  const { enablePageScroll, disablePageScroll } = toggler();
  vue.watch(() => vue.toValue(isDisabled), (value) => {
    if (value) {
      disablePageScroll();
    } else {
      enablePageScroll();
    }
  }, {
    flush: "post"
  });
  vue.onMounted(() => {
    if (immediate && vue.toValue(isDisabled)) {
      disablePageScroll();
    }
  });
  vue.onBeforeUnmount(() => {
    enablePageScroll();
  });
};

exports.usePageScrollToggle = usePageScrollToggle;
exports.vAdjustScrollbarWidth = vAdjustScrollbarWidth;
exports.vMarkScrollable = vMarkScrollable;
