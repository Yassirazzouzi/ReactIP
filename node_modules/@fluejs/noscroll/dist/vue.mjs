import { adjustScrollbarWidth, removeScrollbarWidthAdjustment, markScrollable, unmarkScrollable, createPageScrollToggler } from './index.mjs';
import { watch, toValue, onMounted, onBeforeUnmount } from 'vue';
import './shared/noscroll.96a94b32.mjs';

const vAdjustScrollbarWidth = {
  mounted(el) {
    adjustScrollbarWidth(el);
  },
  beforeUnmount(el) {
    removeScrollbarWidthAdjustment(el);
  }
};
const vMarkScrollable = {
  mounted(el) {
    markScrollable(el);
  },
  beforeUnmount(el) {
    unmarkScrollable(el);
  }
};
const usePageScrollToggle = (isDisabled, {
  immediate = true,
  toggler = createPageScrollToggler
} = {}) => {
  const { enablePageScroll, disablePageScroll } = toggler();
  watch(() => toValue(isDisabled), (value) => {
    if (value) {
      disablePageScroll();
    } else {
      enablePageScroll();
    }
  }, {
    flush: "post"
  });
  onMounted(() => {
    if (immediate && toValue(isDisabled)) {
      disablePageScroll();
    }
  });
  onBeforeUnmount(() => {
    enablePageScroll();
  });
};

export { usePageScrollToggle, vAdjustScrollbarWidth, vMarkScrollable };
